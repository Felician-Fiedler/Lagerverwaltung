#BlueJ class context
comment0.params=
comment0.target=Stack()
comment0.text=\r\n\ Ein\ leerer\ Stack\ wird\ erzeugt.\ \r\n\ Objekte,\ die\ in\ diesem\ Stack\ verwaltet\ werden,\ muessen\ vom\ Typ\r\n\ ContentType\ sein.\r\n
comment1.params=
comment1.target=boolean\ isEmpty()
comment1.text=\r\n\ Die\ Anfrage\ liefert\ den\ Wert\ true,\ wenn\ der\ Stack\ keine\ Objekte\ enthaelt,\ \r\n\ sonst\ liefert\ sie\ den\ Wert\ false.\r\n\ \r\n\ @return\ true,\ falls\ der\ Stack\ leer\ ist,\ sonst\ false\r\n
comment2.params=pContent
comment2.target=void\ push(java.lang.Object)
comment2.text=\r\n\ Das\ Objekt\ pContentType\ wird\ in\ den\ Stack\ eingef\u00FCgt.\ \r\n\ Falls\ pContentType\ gleich\ null\ ist,\ bleibt\ der\ Stack\ unveraendert.\r\n\ \r\n\ @param\ pContent\r\n\ \ \ \ \ \ \ \ \ \ \ \ das\ anzuhaengende\ Objekt\ vom\ Typ\ ContentType\r\n
comment3.params=
comment3.target=void\ pop()
comment3.text=\r\n\ Das\ erste\ Objekt\ wird\ aus\ dem\ Stack\ entfernt.\ \r\n\ Falls\ der\ Stack\ leer\ ist,\ wird\ sie\ nicht\ veraendert.\r\n
comment4.params=
comment4.target=java.lang.Object\ first()
comment4.text=\r\n\ Die\ Anfrage\ liefert\ das\ erste\ Objekt\ des\ Stack.\ \r\n\ Die\ Stack\ bleibt\ unveraendert.\ \r\n\ Falls\ der\ Stack\ leer\ ist,\ wird\ null\ zurueckgegeben.\r\n\r\n\ @return\ das\ erste\ Objekt\ des\ Stack\ vom\ Typ\ ContentType\ oder\ null,\r\n\ \ \ \ \ \ \ \ \ falls\ der\ Stack\ leer\ ist\r\n
comment5.params=
comment5.target=int\ getHoehe()
numComments=6
